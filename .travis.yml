---
# sudo: required
notifications:
  slack:
    on_failure: always

matrix:
  fast_finish: true
  include:  

    - name: "build lua on macOS 10.15.7 osx xcode12.2"
      sudo: required
      os: osx
      # arch: i386 
      osx_image:
        - xcode12.2 #macOS 10.15.7
      addons:
        homebrew:
          packages:
          - node
          - python
          - git
          - tar
          update: true
      language: c
      env:
        global:
          - LUAROCKS=2.2.2
        matrix:
        - LUA=lua5.1
        - LUA=lua5.2
        - LUA=lua5.3
      before_install:
        - source app/setenv_lua.sh 
        - luarocks install luacov
        - luarocks install tapered  
      script:
        - lua -lluacov app/awesome-tests.lua      
      after_success:
        - bash <(curl -s https://codecov.io/bash)
        - deactivate

    - name: "build lua on macOS 10.15.7 osx xcode12.2"
      sudo: required
      os: osx
      # arch: i386 
      osx_image:
        - xcode12.2 #macOS 10.15.7
      addons:
        homebrew:
          packages:
          - node
          - python
          - git
          - tar
          update: true
      language: c
      # env:
      #   global:
      #     - LUAROCKS=2.2.2
      #   matrix:
      #   - LUA=lua5.1
      #   - LUA=lua5.2
      #   - LUA=lua5.3
      before_install:
        - sudo make deploy-lua-app 
        - luarocks install luacov
        - luarocks install tapered  
      script:
        - lua -lluacov app/awesome-tests.lua      
      after_success:
        - bash <(curl -s https://codecov.io/bash)
        - deactivate

    - name: "build lua w codecov on bionic arm64"
      osx: linux
      dist: bionic
      sudo: false
      install: true
      arch: amd64  
      language: c
      # env:
      #   global:
      #   - LUAROCKS=2.2.2
      #   matrix:
      #   - LUA=lua5.1
      #   - LUA=lua5.2
      #   - LUA=lua5.3
      before_install:
        - make deploy-lua-app 
        - luarocks install luacov
        - luarocks install tapered  
      script:
        - lua -lluacov app/awesome-tests.lua    
      after_success:
        - bash <(curl -s https://codecov.io/bash)        
        - deactivate
    
    - name: "build lua w codecov on bionic arm64"
      osx: linux
      dist: bionic
      sudo: false
      install: true
      arch: amd64  
      language: c
      env:
        global:
        - LUAROCKS=2.2.2
        matrix:
        - LUA=lua5.1
        - LUA=lua5.2
        - LUA=lua5.3
      before_install:
        - source app/setenv_lua.sh 
        - luarocks install luacov
        - luarocks install tapered  
      script:
        - lua -lluacov app/awesome-tests.lua    
      after_success:
        - bash <(curl -s https://codecov.io/bash)        
        - deactivate

  
    # - name: "without committing wrapper files gradle on bionic arm64"
    #   dist: bionic
    #   sudo: false
    #   install: true
    #   arch: amd64  
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - cd app2 && ls -lai
    #     - gradle -b wrapper.gradle wrapper     
    #   after_success:
    #     - deactivate

# https://github.com/GoogleContainerTools/jib
    # - name: "build jib gradle plugin on bionic arm64"
    #   dist: bionic
    #   sudo: false
    #   install: true
    #   arch: amd64  
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - cd app3 && mvn compile jib:build     
    #   after_success:
    #     - deactivate

# https://sonarcloud.io/account/security
# https://docs.travis-ci.com/user/sonarcloud/
    # - name: "deploy gradle w jacoco junit sonarcloud on bionic arm64"
    #   dist: bionic
    #   sudo: false
    #   install: true
    #   arch: amd64  
    #   addons:
    #     sonarcloud:
    #       organization: "githubfoam"
    #       token:
    #         secure: $SONAR_TOKEN
    #   language: shell
    #   # language: java
    #   # jdk:
    #   # - openjdk8
    #   before_install:
    #     - cd app11 && chmod +x gradlew
    #   script:
    #     - ./gradlew sonarqube
    #   cache:
    #     directories:
    #       - '$HOME/.m2/repository'
    #       - '$HOME/.sonar/cache'
    #       - '$HOME/.gradle'
    #       - '.gradle'      
    #   after_success:
    #     - deactivate

# https://docs.gradle.org/nightly/userguide/travis-ci.html        
    # - name: "Executing Gradle builds on Travis CI on bionic arm64"
    #   dist: bionic
    #   # https://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure
    #   sudo: false
    #   install: skip
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_cache:
    #   - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
    #   - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
    #   # cache the build tool's caches
    #   cache:
    #     directories:
    #       - $HOME/.m2
    #       # - $HOME/.gradle
    #       - $HOME/.gradle/caches/
    #       - $HOME/.gradle/wrapper/
    #   before_install:
    #     - curl -s "https://get.sdkman.io" | bash
    #     - source "$HOME/.sdkman/bin/sdkman-init.sh"
    #     - sdk version    
    #     - sdk install gradle 6.7 
    #     - gradle -v
    #   # Specify a display with xvfb for UI testing
    #   before_script:
    #     - "export DISPLAY=:99.0"
    #     - "sh -e /etc/init.d/xvfb start"
    #     - sleep 3 # give xvfb some time to start        
    #   script:
    #     - cd app3 && 
    #     - ./gradlew build --scan -s
    #   after_success:
    #     - deactivate

    # TESTED OK
    # https://gradle.org/install/
    # https://sdkman.io/install
    - name: "deploy gradle w sdkman on bionic arm64"
      dist: bionic
      sudo: false
      install: true
      arch: amd64
      language: shell
      before_install:
        - curl -s "https://get.sdkman.io" | bash
        - source "$HOME/.sdkman/bin/sdkman-init.sh"
        - sdk version    
        - sdk install gradle 6.7 
        - gradle -v
      after_success:
        - deactivate

    # TESTED OK
    # https://gradle.org/install/
    # - name: "Installing gradle (homebrew) on macOS 10.15.7 osx xcode12.2"
    #   os: osx
    #   osx_image:
    #     - xcode12.2 #macOS 10.15.7   
    #   addons:
    #     homebrew:
    #       packages:
    #       - gradle
    #       update: true            
    #   script:
    #   - gradle -v
    #   after_success:
    #     - deactivate


    # - name: "build maven w checkstyle on bionic arm64"
    #   dist: bionic
    #   arch: amd64 
    #   sudo: required
    #   addons:
    #     apt:
    #       packages:
    #         # - ant
    #         - xmlstarlet              
    #   language: java
    #   jdk:
    #   - openjdk8
    #   cache:
    #     directories:
    #       - '$HOME/.m2/repository'
    #       - '$HOME/.gradle'
    #       - '$HOME/.ivy2'
    #       # - ~/.ivy2
    #   # before_install:
    #     # - cd app8 && chmod +x gradlew
    #   script:
    #     - cd app10 
    #     - MVN_SETTINGS=${TRAVIS_HOME}/.m2/settings.xml
    #     - xmlstarlet ed --inplace -d "//mirrors" $MVN_SETTINGS
    #     - mvn checkstyle:checkstyle -Pgithub-maven-repo
    #     - mvn -f pom-google-custom-suppression.xml clean checkstyle:checkstyle -Pgithub-maven-repo
    #     - grep "error" target/checkstyle-result.xml
    #     - mvn -f pom-google.xml clean checkstyle:checkstyle -Pgithub-maven-repo
    #   after_success:
    #     # - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

    # - name: "build ant w checkstyle on bionic arm64"
    #   dist: bionic
    #   arch: amd64 
    #   sudo: required
    #   addons:
    #     apt:
    #       packages:
    #         - ant
    #         - xmlstarlet              
    #   language: java
    #   jdk:
    #   - openjdk8
    #   cache:
    #     directories:
    #       - '$HOME/.m2/repository'
    #       - '$HOME/.gradle'
    #       - ~/.ivy2
    #   # before_install:
    #     # - cd app8 && chmod +x gradlew
    #   script:
    #     - cd app9 && ant checkstyle 
    #   after_success:
    #     # - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

#TESTED NOT OK
    # - name: "build gradle w checkstyle on bionic arm64"
    #   dist: bionic
    #   arch: amd64 
    #   sudo: required        
    #   language: java
    #   jdk:
    #   - openjdk8
    #   # cache:
    #   #   directories:
    #   #     - '$HOME/.m2/repository'
    #   #     - '$HOME/.gradle'
    #   before_install:
    #     - cd app8 && chmod +x gradlew
    #   script:
    #     - "./gradlew clean check --debug --stacktrace" 
    #   after_success:
    #     # - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

#TESTED NOT OK
    # - name: "build gradle w jacoco junit codecov  on bionic arm64"
    #   dist: bionic
    #   arch: amd64 
    #   sudo: required        
    #   language: java
    #   jdk:
    #   - openjdk8
    #   # cache:
    #   #   directories:
    #   #     - '$HOME/.m2/repository'
    #   #     - '$HOME/.gradle'
    #   before_install:
    #     # - chmod +x gradlew 
    #     - cd app7 && chmod +x gradlew
    #   script:
    #     # - cd app6 && chmod +x gradlew
    #     - "./gradlew check" 
    #     - "./gradlew codeCoverageReport"
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

    # - name: "build gradle w checkstyle pmd findbugs blackduckcopilot  on bionic arm64"
    #   dist: bionic
    #   arch: amd64 
    #   sudo: required        
    #   language: java
    #   jdk:
    #   - openjdk8
    #   cache:
    #     directories:
    #       - '$HOME/.m2/repository'
    #       - '$HOME/.gradle'
    #   before_install:
    #     - java -version
    #     - gradle -v
    #     # - chmod +x gradlew 
    #   script:
    #     - cd app6 && chmod +x gradlew
    #     - "./gradlew clean check" #Run Checks
    #     - "./gradlew clean build" #Buil Application
    #   after_success:
    #     # Upload to CoPilot
    #     - bash <(curl -s https://copilot.blackducksoftware.com/ci/travis/scripts/upload)
    #     - deactivate

# TESTED OK        
    - name: "build gradle w jacoco coveralls  on bionic arm64"
      dist: bionic
      arch: amd64 
      sudo: required        
      language: java
      jdk:
      - openjdk8
      cache:
        directories:
          - '$HOME/.m2/repository'
          - '$HOME/.gradle'
      before_install:
        - java -version
        - gradle -v
        # - chmod +x gradlew 
      script:
        - cd app5 && chmod +x gradlew
        - "./gradlew clean build"
      after_success:
        - "./gradlew jacocoTestReport coveralls"
        - deactivate

# TESTED  OK    
    - name: "build gradle w findbugs blackduckcopilot  on bionic arm64"
      dist: bionic
      arch: amd64 
      sudo: required        
      language: java
      jdk:
      - openjdk8
      cache:
        directories:
          - '$HOME/.m2/repository'
          - '$HOME/.gradle'
      before_install:
        - java -version
        - gradle -v
        # - chmod +x gradlew
      script:
        - cd app4 && chmod +x gradlew
        - ./gradlew assemble
        - ./gradlew check
      after_success:
        # Upload to CoPilot
        - bash <(curl -s https://copilot.blackducksoftware.com/ci/travis/scripts/upload)
        - deactivate

 # TESTED NOT OK 
    # - name: "build gradle w findbugs blackduckcopilot  on focal arm64"
    #   dist: focal
    #   arch: amd64 
    #   sudo: required        
    #   language: java
    #   jdk:
    #     - openjdk15
    #     # - openjdk10 #Could not determine java version from '10.0.2'.
    #     # - openjdk16 #Could not determine java version from '16-ea'.
    #     # - openjdk9 #Could not determine java version from '9.0.4'.
    #   # - openjdk8 #Expected feature release number in range of 9 to 16, but got: 8
    #   cache:
    #   directories:
    #     - '$HOME/.m2/repository'
    #     - '$HOME/.gradle'
    #   before_install:
    #     # - java -version
    #     - gradle -v
    #   script:
    #     - sudo make deploy-app4
    #   after_success:
    #     # Upload to CoPilot
    #     - bash <(curl -s https://copilot.blackducksoftware.com/ci/travis/scripts/upload)
    #     - deactivate      

 # TESTED OK 
    - name: "build gradle w make findbugs blackduckcopilot  on bionic arm64"
      dist: bionic
      arch: amd64 
      sudo: required        
      language: java
      jdk:
      - openjdk8
      cache:
      directories:
        - '$HOME/.m2/repository'
        - '$HOME/.gradle'
      before_install:
        - java -version
        - gradle -v
      script:
        - sudo make deploy-app4
      after_success:
        # Upload to CoPilot
        - bash <(curl -s https://copilot.blackducksoftware.com/ci/travis/scripts/upload)
        - deactivate      

    # - name: "deploy codecov gradle on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - ./gradlew check
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

  # The command "~/bin/install-jdk.sh --target "/home/travis/openjdk8" --workspace "/home/travis/.cache/install-jdk" --feature "8" --license "GPL" --cacerts" failed and exited with 3 during .
    # - name: "deploy codecov cobertura junit4 maven on focal amd64"
    #   dist: focal
    #   arch: amd64   
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - mvn clean package
    #     - mvn cobertura:cobertura
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
        # - deactivate

  # Caused by: java.lang.ClassNotFoundException: org.apache.maven.doxia.siterenderer.DocumentContent
    # - name: "deploy maven checkstyle on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   cache:
    #     directories:
    #     - ~/.m2
    #   before_install:
    #     - java -version
    #   script:
    #     - cd maven-checkstyle
    #     - mvn site
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

# JDKs installed for Bionic
# https://docs.travis-ci.com/user/reference/bionic/#jvm-clojure-groovy-java-scala-support
    # - name: "deploy checkstyle codecov maven(single pom)  on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   - openjdk10
    #   - openjdk11 #default 
    #   cache:
    #     directories:
    #     - ~/.m2
    #   before_install:
    #     - java -version
    #   script:
    #     - cd maven-checkstyle
    #     - mvn checkstyle:checkstyle
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

# JDKs installed for Bionic
# https://docs.travis-ci.com/user/reference/bionic/#jvm-clojure-groovy-java-scala-support
    # - name: "deploy checkstyle codecov maven(single pom)  on xenial arm64"
    #   dist: xenial
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   - openjdk10
    #   - openjdk11 #default 
    #   cache:
    #     directories:
    #     - ~/.m2
    #   before_install:
    #     - java -version
    #   script:
    #     - cd maven-checkstyle
    #     - mvn checkstyle:checkstyle
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

    # The requested profile "github-maven-repo" could not be activated because it does not exist.
    # - name: "deploy maven checkstyle on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   addons:
    #     apt:
    #       packages:
    #         - xmlstarlet
    #   jdk:
    #   - openjdk8
    #   cache:
    #     directories:
    #     - ~/.m2
    #   before_install:
    #     - java -version
    #   script:
    #     - MVN_SETTINGS=${TRAVIS_HOME}/.m2/settings.xml
    #     - xmlstarlet ed --inplace -d "//mirrors" $MVN_SETTINGS
    #     - cd maven-checkstyle
    #     - mvn checkstyle:checkstyle -Pgithub-maven-repo
    #     - mvn -f pom-google-custom-suppression.xml clean checkstyle:checkstyle -Pgithub-maven-repo
    #     - grep "error" target/checkstyle-result.xml
    #     - mvn -f pom-google.xml clean checkstyle:checkstyle -Pgithub-maven-repo
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

    # - name: "deploy codecov cobertura junit4 maven(single pom) on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - cd codecov-test2
    #     - mvn clean package
    #     - mvn cobertura:cobertura
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

    # - name: "deploy codecov cobertura junit4 maven(parent-child pom) on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - mvn clean package
    #     - mvn cobertura:cobertura
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate
