---
# sudo: required
notifications:
  slack:
    on_failure: always

matrix:
  fast_finish: true
  include:  

    # - name: "without committing wrapper files gradle on bionic arm64"
    #   dist: bionic
    #   sudo: false
    #   install: true
    #   arch: amd64  
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - cd app2 && ls -lai
    #     - gradle -b wrapper.gradle wrapper     
    #   after_success:
    #     - deactivate

    - name: "deploy gradle on bionic arm64"
      dist: bionic
      sudo: false
      install: true
      arch: amd64  
      addons:
        sonarcloud:
          organization: "sonarcloud"
          token:
            secure: "RfH/EbIMdlyILuURtxvvKQ5HYF+GgHWp8RWeBPs17XFcRpIroAlx4/UJzzcOMfvGfk6ce1lrWT1WQyhW5g7fRL0SGKmq2hsDG3q00gfyTciVyGnF6XKNy4VhWA+EAuN6qU7U/dcWf8ttSlO2fxAQNifpn6PhAmjF3CLLUHkCfEbz01HOoaA/BtFJReWtfmLDWLcGgEz3lzWtiobujYwE86Fz6Ch2JjYIjqFkPyffUaCOXWjPkSOTOO4o+TspX9GlgT9aj8WR0xfECvpnKr6s3Gx/zX/dbulV3R2JfUSHelByi72V4e69PzCx0per4wSc6eZyUaVYo2RSaGC38eypXQwN7MZOX26HV+STTeaVNMHXveoOuFHvlop/aXKkxcDv4MGaIq7WwniJoAWwziBweZTnVtJbn+FvEBLCfpuSxMYAW3SKR63PN56oMisSdZEyjnsRXgasj15sUgHVBpEqVGQNXs39Xqi3TpRxoCeZaWKraZC1ZqcGL0OYxVD4l+YmNabXIMG9+JdtyWRjtytDZXMRa4Uxq/NPVR9gtOBbiGbliiedC5uFhR8gI2PqWNEVxlp60C1Daryi4nmW6c797z+VLSu3p7a3QFKDfUDDYxvMoN8DTl4A1x6BWopFUHFiGu/qXvfSy9uBUgt0McQW7YO9lLlUHzFDMJWbP0D+3Cs="
      # language: java
      # jdk:
      # - openjdk8
      # before_install:
      #   - java -version
      script:
        - ./gradlew sonarqube
      #   - ./gradlew assemble
      #   - ./gradlew check
      #   - ./gradlew build #Build with Gradle
      cache:
        directories:
          - '$HOME/.m2/repository'
          - '$HOME/.sonar/cache'
          - '$HOME/.gradle'
          - '.gradle'      
      after_success:
        - deactivate

        # https://sdkman.io/install
    - name: "deploy gradle w sdkman on bionic arm64"
      dist: bionic
      sudo: false
      install: true
      arch: amd64  
      before_install:
        - curl -s "https://get.sdkman.io" | bash
        - source "$HOME/.sdkman/bin/sdkman-init.sh"
        - sdk version    
        - sdk install gradle 6.7 
        - gradle -v
      after_success:
        - deactivate

        # https://gradle.org/install/
    - name: "Installing gradle (homebrew) on macOS 10.15.7 osx xcode12.2"
      os: osx
      osx_image:
        - xcode12.2 #macOS 10.15.7   
      addons:
        homebrew:
          packages:
          - gradle
          update: true            
      script:
      - gradle -v
      after_success:
        - deactivate

    # - name: "deploy blackduckcopilot gradle on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - ./gradlew check
    #   after_success:
    #     # Upload to CoPilot
    #     - bash <(curl -s https://copilot.blackducksoftware.com/ci/travis/scripts/upload)
    #     - deactivate

    # - name: "deploy codecov gradle on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - ./gradlew check
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

  # The command "~/bin/install-jdk.sh --target "/home/travis/openjdk8" --workspace "/home/travis/.cache/install-jdk" --feature "8" --license "GPL" --cacerts" failed and exited with 3 during .
    # - name: "deploy codecov cobertura junit4 maven on focal amd64"
    #   dist: focal
    #   arch: amd64   
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - mvn clean package
    #     - mvn cobertura:cobertura
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
        # - deactivate

  # Caused by: java.lang.ClassNotFoundException: org.apache.maven.doxia.siterenderer.DocumentContent
    # - name: "deploy maven checkstyle on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   cache:
    #     directories:
    #     - ~/.m2
    #   before_install:
    #     - java -version
    #   script:
    #     - cd maven-checkstyle
    #     - mvn site
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

# JDKs installed for Bionic
# https://docs.travis-ci.com/user/reference/bionic/#jvm-clojure-groovy-java-scala-support
    # - name: "deploy checkstyle codecov maven(single pom)  on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   - openjdk10
    #   - openjdk11 #default 
    #   cache:
    #     directories:
    #     - ~/.m2
    #   before_install:
    #     - java -version
    #   script:
    #     - cd maven-checkstyle
    #     - mvn checkstyle:checkstyle
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

# JDKs installed for Bionic
# https://docs.travis-ci.com/user/reference/bionic/#jvm-clojure-groovy-java-scala-support
    # - name: "deploy checkstyle codecov maven(single pom)  on xenial arm64"
    #   dist: xenial
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   - openjdk10
    #   - openjdk11 #default 
    #   cache:
    #     directories:
    #     - ~/.m2
    #   before_install:
    #     - java -version
    #   script:
    #     - cd maven-checkstyle
    #     - mvn checkstyle:checkstyle
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

    # The requested profile "github-maven-repo" could not be activated because it does not exist.
    # - name: "deploy maven checkstyle on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   addons:
    #     apt:
    #       packages:
    #         - xmlstarlet
    #   jdk:
    #   - openjdk8
    #   cache:
    #     directories:
    #     - ~/.m2
    #   before_install:
    #     - java -version
    #   script:
    #     - MVN_SETTINGS=${TRAVIS_HOME}/.m2/settings.xml
    #     - xmlstarlet ed --inplace -d "//mirrors" $MVN_SETTINGS
    #     - cd maven-checkstyle
    #     - mvn checkstyle:checkstyle -Pgithub-maven-repo
    #     - mvn -f pom-google-custom-suppression.xml clean checkstyle:checkstyle -Pgithub-maven-repo
    #     - grep "error" target/checkstyle-result.xml
    #     - mvn -f pom-google.xml clean checkstyle:checkstyle -Pgithub-maven-repo
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

    # - name: "deploy codecov cobertura junit4 maven(single pom) on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - cd codecov-test2
    #     - mvn clean package
    #     - mvn cobertura:cobertura
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate

    # - name: "deploy codecov cobertura junit4 maven(parent-child pom) on bionic arm64"
    #   dist: bionic
    #   arch: amd64         
    #   language: java
    #   jdk:
    #   - openjdk8
    #   before_install:
    #     - java -version
    #   script:
    #     - mvn clean package
    #     - mvn cobertura:cobertura
    #   after_success:
    #     - bash <(curl -s https://codecov.io/bash)
    #     - deactivate
